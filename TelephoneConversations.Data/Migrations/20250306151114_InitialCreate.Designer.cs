// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TelephoneConversations.DataAccess.Data;

#nullable disable

namespace TelephoneConversations.DataAccess.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250306151114_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("TelephoneConversations.Core.Models.Call", b =>
                {
                    b.Property<int>("CallID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CallID"));

                    b.Property<decimal>("BaseCost")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal(10,2)");

                    b.Property<DateTime>("CallDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CityID")
                        .HasColumnType("int");

                    b.Property<decimal>("CostWithDiscount")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal(10,2)");

                    b.Property<decimal>("Discount")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal(10,2)");

                    b.Property<int>("Duration")
                        .HasColumnType("int");

                    b.Property<int>("SubscriberID")
                        .HasColumnType("int");

                    b.Property<string>("TimeOfDay")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CallID");

                    b.HasIndex("CityID");

                    b.HasIndex("SubscriberID");

                    b.ToTable("Calls");
                });

            modelBuilder.Entity("TelephoneConversations.Core.Models.City", b =>
                {
                    b.Property<int>("CityID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CityID"));

                    b.Property<string>("CityName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("CityID");

                    b.ToTable("Cities");
                });

            modelBuilder.Entity("TelephoneConversations.Core.Models.Discount", b =>
                {
                    b.Property<int>("DiscountID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DiscountID"));

                    b.Property<decimal>("DiscountRate")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("DurationMax")
                        .HasColumnType("int");

                    b.Property<int>("DurationMin")
                        .HasColumnType("int");

                    b.Property<int>("TariffID")
                        .HasColumnType("int");

                    b.HasKey("DiscountID");

                    b.HasIndex("TariffID");

                    b.ToTable("Discounts", t =>
                        {
                            t.HasCheckConstraint("CK_Discount_Duration", "[DurationMax] >= [DurationMin]");
                        });
                });

            modelBuilder.Entity("TelephoneConversations.Core.Models.Subscriber", b =>
                {
                    b.Property<int>("SubscriberID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SubscriberID"));

                    b.Property<string>("BankAccount")
                        .IsRequired()
                        .HasMaxLength(29)
                        .HasColumnType("nvarchar(29)");

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("IPN")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("TelephonePoint")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("SubscriberID");

                    b.ToTable("Subscribers", t =>
                        {
                            t.HasCheckConstraint("CK_Subscriber_BankAccount", "LEFT([BankAccount], 2) = 'UA'");
                        });
                });

            modelBuilder.Entity("TelephoneConversations.Core.Models.Tariff", b =>
                {
                    b.Property<int>("TariffID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TariffID"));

                    b.Property<int>("CityID")
                        .HasColumnType("int");

                    b.Property<decimal>("DayPrice")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal(10,2)");

                    b.Property<decimal>("NightPrice")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal(10,2)");

                    b.HasKey("TariffID");

                    b.HasIndex("CityID")
                        .IsUnique();

                    b.ToTable("Tariffs");
                });

            modelBuilder.Entity("TelephoneConversations.Core.Models.Call", b =>
                {
                    b.HasOne("TelephoneConversations.Core.Models.City", "City")
                        .WithMany("Calls")
                        .HasForeignKey("CityID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TelephoneConversations.Core.Models.Subscriber", "Subscriber")
                        .WithMany("Calls")
                        .HasForeignKey("SubscriberID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("City");

                    b.Navigation("Subscriber");
                });

            modelBuilder.Entity("TelephoneConversations.Core.Models.Discount", b =>
                {
                    b.HasOne("TelephoneConversations.Core.Models.Tariff", "Tariff")
                        .WithMany("Discounts")
                        .HasForeignKey("TariffID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Tariff");
                });

            modelBuilder.Entity("TelephoneConversations.Core.Models.Tariff", b =>
                {
                    b.HasOne("TelephoneConversations.Core.Models.City", "City")
                        .WithOne("Tariff")
                        .HasForeignKey("TelephoneConversations.Core.Models.Tariff", "CityID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("City");
                });

            modelBuilder.Entity("TelephoneConversations.Core.Models.City", b =>
                {
                    b.Navigation("Calls");

                    b.Navigation("Tariff")
                        .IsRequired();
                });

            modelBuilder.Entity("TelephoneConversations.Core.Models.Subscriber", b =>
                {
                    b.Navigation("Calls");
                });

            modelBuilder.Entity("TelephoneConversations.Core.Models.Tariff", b =>
                {
                    b.Navigation("Discounts");
                });
#pragma warning restore 612, 618
        }
    }
}
